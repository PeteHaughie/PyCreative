[project]
name = "pycreative"
version = "0.1.0"
description = "Batteries-included creative coding framework for Python, built atop Pyglet."
authors = [{name = "Pete Haughie", email = "pete@example.com"}]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "pyglet",
    "skia-python",
    "pillow",
    "numpy",
]

[optional-dependencies]
audio = ["sounddevice"]
video = ["gstreamer"]

# Development and optional / heavy runtime extras have been moved out of the
# main dependency list to keep installs minimal for end-users. Use the `dev`
# extra for development tooling, and `extras` for heavy optional runtime
# packages (e.g., OpenGL helpers, computer-vision integrations).
dev = [
    "pytest",
    "pytest-timeout",
    "ruff",
    "mypy",
]

extras = [
    "PyOpenGL",
    "opencv-python",
]

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 88

# Paths to exclude from linting (examples/sketches/scripts contain user sketches or PoC code)
# Use a regex to exclude directories when ruff is invoked over the project root.
exclude = '(^examples/|^sketches/|^scripts/|^src/core/adapters/|^src/core/io/)'

[tool.mypy]
python_version = 3.11
ignore_missing_imports = true
strict = false
check_untyped_defs = true
disallow_untyped_defs = false
warn_unused_ignores = true
# Exclude examples, sketches, scripts and heavy adapter/io modules from mypy checks.
# This mirrors the conservative Option-A approach used locally so CI runs without
# additional CLI flags will behave the same.
exclude = '(^examples/|^sketches/|^scripts/|^src/core/adapters/|^src/core/io/)'
# Default files/directories to type-check when no CLI targets are provided
files = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools]
package-dir = {"" = "src"}

[project.scripts]
pycreative = "pycreative.cli:main"
